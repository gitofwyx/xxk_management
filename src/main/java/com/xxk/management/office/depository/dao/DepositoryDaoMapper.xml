<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxk.management.office.depository.dao.DepositoryDao">
    <sql id="columns">id,depository_ident,delivery_id,class_id,entity_id,entity_name,entity_type,depository_type,depository_by,
        depository_officeId,depository_no,depository_unit,depository_proportion,depository_total,depository_total_unit,
        depository_flag,keyWord,stock_version,createUserId,createDate,updateUserId,updateDate,deleteFlag</sql>

    <!--获取分页 -->
    <select id="listDepository" resultType="com.xxk.management.office.depository.entity.Depository">
        select
        <include refid="columns"></include>
        from xxk_depository where  deleteFlag='0' and stock_type=#{search_type}
        <if test="class_id!=null and ''!= class_id">
            and class_id = #{class_id}
        </if>
        <if test="entity_id!=null and ''!= entity_id">
            and entity_id = #{entity_id}
        </if>
        <if test="stock_office_id!=null and ''!= stock_office_id">
            and stock_office_id = #{stock_office_id}
        </if>
        ORDER BY createDate desc limit #{pageStart},#{pageSize};
    </select>

    <!--添加信息 --><!--设置版本号为1-->
    <insert id="addDepository" parameterType="com.xxk.management.office.depository.entity.Depository">
        insert into xxk_depository(<include refid="columns"></include>) values(
        #{id},#{depository_ident},#{delivery_id},#{class_id},#{entity_id},#{entity_name},#{entity_type},#{depository_type},#{depository_by},
        #{depository_officeId},#{depository_no},#{depository_unit},#{depository_proportion},#{depository_total},#{depository_total_unit},
        #{depository_flag},#{keyWord},1,#{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--根据id获取信息 -->
    <select id="getDepositoryIdByIdent" parameterType="string" resultType="string">
        select id
        from xxk_depository
        where in_confirmed_ident=#{0}
        and deleteFlag='0';
    </select>

    <!--根据id获取信息 -->
    <select id="getDepositoryById" parameterType="string" resultType="com.xxk.management.office.depository.entity.Depository">
        select
        <include refid="columns"></include>
        from xxk_depository
        where id=#{0}
        and deleteFlag='0';
    </select>

    <!--更新记录 -->
    <update id="updateDepository" parameterType="com.xxk.management.office.depository.entity.Depository">
        update xxk_depository set account=#{account},birth=#{birth},sex=#{sex},phone=#{phone},createUnit=#{createUnit},
        QCellCore=#{QCellCore},updateUserId=#{updateUserId},updateDate=#{updateDate}
        where entity_id=#{entity_id} and deleteFlag='0';
    </update>

    <!--入库更新 -->
    <update id="plusDepositoryNo" parameterType="com.xxk.management.office.depository.entity.Depository">
        update xxk_depository set stock_no=#{stock_no},stock_total=stock_total+#{stock_total},stock_version=stock_version+1,
        updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and stock_version=#{stock_version} and deleteFlag='0';
    </update>

    <!--入库更新 -->
    <update id="reduceDepositoryNo" parameterType="com.xxk.management.office.depository.entity.Depository">
        update xxk_depository set stock_no=#{stock_no},stock_total=stock_total-#{stock_total},stock_version=stock_version+1,
        updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and stock_version=#{stock_version} and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListRegUser" parameterType="java.util.List">
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>