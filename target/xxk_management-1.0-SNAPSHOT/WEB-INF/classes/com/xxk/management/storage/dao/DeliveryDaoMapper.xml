<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxk.management.storage.dao.DeliveryDao">
    <sql id="columns">id,class_id,entity_id,entity_name,entity_type,stock_id,out_confirmed_ident,out_confirmed_type,out_confirmed_by,out_confirmed_officeId,
     out_confirmed_date,out_confirmed_no,out_confirmed_unit,out_confirmed_proportion,out_confirmed_total,entity_entry_status,keyWord,createUserId,createDate,
     updateUserId,updateDate,deleteFlag</sql>

    <!--获取分页 -->
    <select id="listDelivery" parameterType="string" resultType="com.xxk.management.storage.entity.Delivery">
        select
        <include refid="columns"></include>
        from xxk_delivery where deleteFlag='0' ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--获取分页 -->
    <select id="listDeliveryByStock" parameterType="string" resultType="com.xxk.management.storage.entity.Delivery">
        select
        <include refid="columns"></include>
        from xxk_delivery where deleteFlag='0' and stock_id=#{2} ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--获取分页 -->
    <select id="listDeliveryByOffice" parameterType="string" resultType="com.xxk.management.storage.entity.Delivery">
        select
        <include refid="columns"></include>
        from xxk_delivery where deleteFlag='0' and out_confirmed_officeId=#{2} and entity_entry_status='1' ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--添加信息 -->
    <insert id="addDelivery" parameterType="com.xxk.management.storage.entity.Delivery">
        insert into xxk_delivery(<include refid="columns"></include>) values(
        #{id},#{class_id},#{entity_id},#{entity_name},#{entity_type},#{stock_id},#{out_confirmed_ident},#{out_confirmed_type},#{out_confirmed_by},#{out_confirmed_officeId},
        #{out_confirmed_date}, #{out_confirmed_no},#{out_confirmed_unit},#{out_confirmed_proportion},#{out_confirmed_total},#{entity_entry_status},#{keyWord},#{createUserId},
        #{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--修改信息 -->
    <update id="allEntryDepository"  parameterType="string">
        update xxk_delivery set entity_entry_status='3'
         where (entity_entry_status='1' or entity_entry_status='2')
         and id=#{0}
         and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListRegUser" parameterType="java.util.List">
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>