<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxk.management.storage.dao.StorageDao">
    <sql id="columns">id,device_id,in_confirmed_ident,in_confirmed_by,in_confirmed_date,in_confirmed_no,fact_dev_no,
       out_flag,keyWord,createUserId,createDate,updateUserId,updateDate,deleteFlag</sql>

    <!--获取分页 -->
    <select id="listStorage" parameterType="string" resultType="com.xxk.management.storage.entity.Storage">
        select
        <include refid="columns"></include>
        from xxk_in_storage where deleteFlag='0' ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--添加信息 -->
    <insert id="addStorage" parameterType="com.xxk.management.storage.entity.Storage">
        insert into xxk_in_storage(<include refid="columns"></include>) values(
        #{id},#{device_id},#{in_confirmed_ident},#{in_confirmed_by},#{in_confirmed_date},#{in_confirmed_no},#{fact_dev_no},
        #{out_flag},#{keyWord},#{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--根据id获取信息 -->
    <select id="getRegUser" parameterType="string" resultType="com.xxk.management.user.entity.RegUser">
        select
        <include refid="columns"></include>
        from xxk_reg_user
        where id=#{id}
        and deleteFlag='0';
    </select>

    <!--修改信息 -->
    <update id="updateRegUser" parameterType="com.xxk.management.user.entity.RegUser">
        update xxk_reg_user set account=#{account},birth=#{birth},sex=#{sex},phone=#{phone},createUnit=#{createUnit},
        QCellCore=#{QCellCore},updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListRegUser" parameterType="java.util.List">
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>